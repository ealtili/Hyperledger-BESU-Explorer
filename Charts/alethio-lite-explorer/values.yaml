# Default values for aleth-lite-explorer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: ""

## Number of replicas to run
##
replicaCount: 1

## Docker image
#
image:
  repository: alethio/ethereum-lite-explorer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []


## Provide a name in place of Aleth for `app:` labels
##
nameOverride: ""

## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Aleth's Lite Client configuration options
## URL: https://github.com/Alethio/ethereum-lite-explorer#running-in-docker
##
config:

  ## URL of RPC enabled node. (e.g. https://host:port, also supports Basic Auth by prepending user:pass@ to the host). 
  ## This overrides in the config file the nodeUrl attribute of the eth-lite core plugin.
  #
  appnodeUrl: ""
  
  ## It is used ONLY in index.html for og:tags (e.g. https://my.app.tld). Overrides build time defined value.
  #
  appBaseUrl: ""
  
  ## Enables serving the app on a sub-path instead of the domain root (e.g. some/path/to/app).
  ## Example: If serving the app from https://my.tld/path/to/app: $ APP_BASE_URL="https://my.tld" APP_BASE_PATH="path/to/app"
  #
  appBasePath: ""

service:
  type: ClusterIP
  port: 80

ingress:
  ## Enables or disables ingress for this Chart
  ##
  enabled: true

  ## Add annotations as required for your Ingress controller.
  ##
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  
  hosts: []
     - host: #lite-explorer.local
       paths: 
        - path: "/explorer(/|$)(.*)"

  tls: []
  #  - secretName: lite-explorer.local-tls
  #    hosts:
  #      - lite-explorer.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}